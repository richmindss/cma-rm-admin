{"version":3,"file":"click-outside.directive.js","sources":["/home/vinay/Documents/projects/new/flat-able-free-angular-admin-template/template/node_modules/ng-click-outside/lib/click-outside.directive.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar ClickOutsideDirective = /** @class */ (function () {\n    function ClickOutsideDirective(_el, _ngZone, platformId) {\n        this._el = _el;\n        this._ngZone = _ngZone;\n        this.platformId = platformId;\n        this.clickOutsideEnabled = true;\n        this.attachOutsideOnClick = false;\n        this.delayClickOutsideInit = false;\n        this.emitOnBlur = false;\n        this.exclude = '';\n        this.excludeBeforeClick = false;\n        this.clickOutsideEvents = '';\n        this.clickOutside = new core_1.EventEmitter();\n        this._nodesExcluded = [];\n        this._events = ['click'];\n        this._initOnClickBody = this._initOnClickBody.bind(this);\n        this._onClickBody = this._onClickBody.bind(this);\n        this._onWindowBlur = this._onWindowBlur.bind(this);\n    }\n    ClickOutsideDirective.prototype.ngOnInit = function () {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        this._init();\n    };\n    ClickOutsideDirective.prototype.ngOnDestroy = function () {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        this._removeClickOutsideListener();\n        this._removeAttachOutsideOnClickListener();\n        this._removeWindowBlurListener();\n    };\n    ClickOutsideDirective.prototype.ngOnChanges = function (changes) {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (changes['attachOutsideOnClick'] || changes['exclude'] || changes['emitOnBlur']) {\n            this._init();\n        }\n    };\n    ClickOutsideDirective.prototype._init = function () {\n        if (this.clickOutsideEvents !== '') {\n            this._events = this.clickOutsideEvents.split(',').map(function (e) { return e.trim(); });\n        }\n        this._excludeCheck();\n        if (this.attachOutsideOnClick) {\n            this._initAttachOutsideOnClickListener();\n        }\n        else {\n            this._initOnClickBody();\n        }\n        if (this.emitOnBlur) {\n            this._initWindowBlurListener();\n        }\n    };\n    ClickOutsideDirective.prototype._initOnClickBody = function () {\n        if (this.delayClickOutsideInit) {\n            setTimeout(this._initClickOutsideListener.bind(this));\n        }\n        else {\n            this._initClickOutsideListener();\n        }\n    };\n    ClickOutsideDirective.prototype._excludeCheck = function () {\n        if (this.exclude) {\n            try {\n                var nodes = Array.from(document.querySelectorAll(this.exclude));\n                if (nodes) {\n                    this._nodesExcluded = nodes;\n                }\n            }\n            catch (err) {\n                console.error('[ng-click-outside] Check your exclude selector syntax.', err);\n            }\n        }\n    };\n    ClickOutsideDirective.prototype._onClickBody = function (ev) {\n        if (!this.clickOutsideEnabled) {\n            return;\n        }\n        if (this.excludeBeforeClick) {\n            this._excludeCheck();\n        }\n        if (!this._el.nativeElement.contains(ev.target) && !this._shouldExclude(ev.target)) {\n            this._emit(ev);\n            if (this.attachOutsideOnClick) {\n                this._removeClickOutsideListener();\n            }\n        }\n    };\n    /**\n     * Resolves problem with outside click on iframe\n     * @see https://github.com/arkon/ng-click-outside/issues/32\n     */\n    /**\n       * Resolves problem with outside click on iframe\n       * @see https://github.com/arkon/ng-click-outside/issues/32\n       */\n    ClickOutsideDirective.prototype._onWindowBlur = /**\n       * Resolves problem with outside click on iframe\n       * @see https://github.com/arkon/ng-click-outside/issues/32\n       */\n    function (ev) {\n        var _this = this;\n        setTimeout(function () {\n            if (!document.hidden) {\n                _this._emit(ev);\n            }\n        });\n    };\n    ClickOutsideDirective.prototype._emit = function (ev) {\n        var _this = this;\n        if (!this.clickOutsideEnabled) {\n            return;\n        }\n        this._ngZone.run(function () { return _this.clickOutside.emit(ev); });\n    };\n    ClickOutsideDirective.prototype._shouldExclude = function (target) {\n        for (var _i = 0, _a = this._nodesExcluded; _i < _a.length; _i++) {\n            var excludedNode = _a[_i];\n            if (excludedNode.contains(target)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ClickOutsideDirective.prototype._initClickOutsideListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return document.body.addEventListener(e, _this._onClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._removeClickOutsideListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return document.body.removeEventListener(e, _this._onClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._initAttachOutsideOnClickListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return _this._el.nativeElement.addEventListener(e, _this._initOnClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._removeAttachOutsideOnClickListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return _this._el.nativeElement.removeEventListener(e, _this._initOnClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._initWindowBlurListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            window.addEventListener('blur', _this._onWindowBlur);\n        });\n    };\n    ClickOutsideDirective.prototype._removeWindowBlurListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            window.removeEventListener('blur', _this._onWindowBlur);\n        });\n    };\n    ClickOutsideDirective.decorators = [\n        { type: core_1.Injectable },\n        { type: core_1.Directive, args: [{ selector: '[clickOutside]' },] },\n    ];\n    /** @nocollapse */\n    ClickOutsideDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: core_1.NgZone, },\n        { type: Object, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\n    ]; };\n    ClickOutsideDirective.propDecorators = {\n        \"clickOutsideEnabled\": [{ type: core_1.Input },],\n        \"attachOutsideOnClick\": [{ type: core_1.Input },],\n        \"delayClickOutsideInit\": [{ type: core_1.Input },],\n        \"emitOnBlur\": [{ type: core_1.Input },],\n        \"exclude\": [{ type: core_1.Input },],\n        \"excludeBeforeClick\": [{ type: core_1.Input },],\n        \"clickOutsideEvents\": [{ type: core_1.Input },],\n        \"clickOutside\": [{ type: core_1.Output },],\n    };\n    return ClickOutsideDirective;\n}());\nexports.ClickOutsideDirective = ClickOutsideDirective;\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkKM,AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAgBA;;;;"}